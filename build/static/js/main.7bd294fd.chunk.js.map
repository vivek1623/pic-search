{"version":3,"sources":["data/config/constants.js","data/config/utils.js","components/header/index.js","components/imagecard/index.js","components/errorboundary/index.js","components/album/index.js","components/loader/index.js","app/index.js","serviceWorker.js","index.js"],"names":["API_KEY","PER_PAGE_COUNT","APP_LAYOUT","LOCAL_STORAGE","SEARCH_KEY","checkDevice","screen_data","screen_width","window","innerWidth","screen_height","innerHeight","screen_orientation","this","screen_type","matchMedia","matches","deviceStatus","getColumns","getImageUrl","photo","farm","server","id","secret","getDataFromLocalStorage","key","undefined_return_value","data","localStorage","getItem","undefined","JSON","parse","setDataInLocalStorage","json_data","stringify","setItem","filterArrayBySearchText","text","array","filter","item","toLowerCase","indexOf","Search","Input","Header","props","title","search_text","show_search_overlay","search_keys","onSearch","onChange","onClickSearchKey","className","style","height","xs","span","offset","sm","md","visible","overlay","map","search_key","index","Item","onClick","placeholder","value","React","PureComponent","ImageCard","onClickCard","img_data","src","url","alt","minHeight","defaultProps","ErrorBoundary","state","hasError","error","errorInfo","console","log","setState","children","Component","Album","showImageInModal","selected_image_data","show_modal","closeModal","renderAlbumColumns","columns","images","column","i","lg","image_data","length","footer","maskClosable","onCancel","Loader","count","App","device_data","next_page","has_more_images","loading","startLoading","stopLoading","showMessage","type","msg","Message","message","setDeviceData","clearTimeout","timeout","setTimeout","fetchRecentImages","callback","axios","method","validateStatus","status","then","res","photos","convertInImagesList","catch","fetchImagesBySearchTag","tag","img_obj","push","onImageSearch","findIndex","onChangeSearchText","event","target","filterd_search_keys","fetchMoreImages","addEventListener","removeEventListener","paddingTop","scrollableTarget","dataLength","hasMore","loader","endMessage","scrollThreshold","next","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6TAAaA,EAAU,mCAEVC,EAAiB,GAEjBC,EACQ,IAGRC,EAAgB,CAC3BC,WAAY,kB,SCLDC,EAAc,CACzBC,YAAa,WACX,MACE,CACEC,aAAcC,OAAOC,WACrBC,cAAeF,OAAOG,YACtBC,mBAAoBC,KAAKD,qBACzBE,YAAaD,KAAKC,gBAIxBF,mBAAoB,WAClB,OAAIJ,OAAOO,WAAW,2BAA2BC,QACxC,YAEA,YAGXF,YAAa,WACX,OAAIN,OAAOC,WAAa,IACf,KACED,OAAOC,WAAa,IACtB,KACED,OAAOC,WAAa,IACtB,KACED,OAAOC,WAAa,KACtB,KACED,OAAOC,WAAa,KACtB,KACED,OAAOC,WAAa,KACtB,MAEA,QAGXQ,aAAc,WACZ,OAAO,eACFJ,KAAKP,iBAKDY,EAAa,SAAAJ,GACxB,OAAQA,GACN,IAAK,KAAM,MAAO,CAAC,MACnB,IAAK,KAAM,MAAO,CAAC,KAAM,MACzB,IAAK,KAAM,MAAO,CAAC,KAAM,KAAM,MAC/B,IAAK,KACL,IAAK,KACL,IAAK,MACL,IAAK,OAAQ,MAAO,CAAC,KAAM,KAAM,KAAM,MACvC,QAAS,MAAO,CAAC,QAIRK,EAAc,SAAAC,GAEzB,MADS,sBAAkBA,EAAMC,KAAxB,6BAAiDD,EAAME,OAAvD,YAAiEF,EAAMG,GAAvE,YAA6EH,EAAMI,OAAnF,SAIEC,EAA0B,SAACC,EAAKC,GAC3C,IAAMC,EAAOC,aAAaC,QAAQJ,GAClC,OAAQE,QAAiBG,IAATH,EAAqBI,KAAKC,MAAML,GAAQD,GAG7CO,EAAwB,SAACR,EAAKE,GACzC,IAAMO,EAAYH,KAAKI,UAAUR,GACjCC,aAAaQ,QAAQX,EAAKS,IAGfG,EAA0B,SAACC,EAAMC,GAC5C,OAAOA,EAAMC,QAAO,SAAAC,GAClB,OAAQA,QAAiBX,IAATW,GAAyE,IAAnDA,EAAKC,cAAcC,QAAQL,EAAKI,mB,mDC5DlEE,G,iCAAWC,IAAXD,QAyCOE,E,iLAtCH,IAAD,EACgGlC,KAAKmC,MAApGC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,oBAAqBC,EAD1C,EAC0CA,YAAaC,EADvD,EACuDA,SAAUC,EADjE,EACiEA,SAAUC,EAD3E,EAC2EA,iBAClF,OACE,yBAAKC,UAAU,uFAAuFC,MAAO,CAAEC,OAAO,GAAD,OAAKxD,EAAL,QACnH,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKyD,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,GAAIC,OAAQ,GAAKE,GAAI,CAAEH,KAAM,EAAGC,OAAQ,GAAKL,UAAU,gBACnG,wBAAIA,UAAU,8DAA8DP,GAC5E,kBAAC,IAAD,CACEe,QAASb,EACTc,QACE,kBAAC,IAAD,KAEIb,EAAYc,KAAI,SAACC,EAAYC,GAAb,OACd,kBAAC,IAAKC,KAAN,CAAW3C,IAAK0C,EAAOE,QAAS,kBAAMf,EAAiBY,KAAcA,QAK7E,kBAACtB,EAAD,CAAQ0B,YAAY,wBAAwBC,MAAOtB,EAAaG,SAAUA,EAAUC,SAAUA,Y,GAnBvFmB,IAAMC,e,SCfrBC,G,kNACJC,YAAc,WAAO,IAAD,EACY,EAAK5B,MAA3B6B,EADU,EACVA,UACRP,EAFkB,EACAA,SACVO,I,wEAGA,IACAA,EAAahE,KAAKmC,MAAlB6B,SACR,OACE,yBAAKrB,UAAU,kEAAkEc,QAASzD,KAAK+D,aAC7F,yBAAKpB,UAAU,oBACb,yBAAKA,UAAU,iBAAiBsB,IAAKD,EAASE,IAAKC,IAAI,GAAGvB,MAAO,CAACwB,UAAU,iB,GAX9DR,IAAMC,gBAuB9BC,EAAUO,aAAe,CACvBL,SAAU,IAGGF,QCFAQ,E,YAxBb,WAAYnC,GAAQ,IAAD,8BACjB,4CAAMA,KACDoC,MAAQ,CAAEC,UAAU,GAFR,E,+EAKDC,EAAOC,GACvBC,QAAQC,IAAI,QAASH,GACrBE,QAAQC,IAAI,YAAaF,GACzB1E,KAAK6E,SAAS,CAAEL,UAAU,M,+BAGlB,IACAM,EAAa9E,KAAKmC,MAAlB2C,SAER,OADqB9E,KAAKuE,MAAlBC,SAEC,KACFM,M,GAjBiBlB,IAAMmB,WCU5BC,E,YACJ,WAAY7C,GAAQ,IAAD,8BACjB,4CAAMA,KAOR8C,iBAAmB,SAAAC,GACjB,EAAKL,SAAS,CACZM,YAAY,EACZD,yBAXe,EAenBE,WAAa,WACX,EAAKP,SAAS,CACZM,YAAY,EACZD,oBAAqB,QAlBN,EAsBnBG,mBAAqB,WAAO,IAAD,EACG,EAAKlD,MAAzBmD,EADiB,EACjBA,QAASC,EADQ,EACRA,OACjB,OAAOD,EAAQjC,KAAI,SAACmC,EAAQC,GAC1B,OACE,kBAAC,IAAD,CAAK5E,IAAK2E,EAAQ1C,GAAI,GAAIG,GAAI,GAAIC,GAAI,EAAGwC,GAAI,GAEzCH,EAAOlC,KAAI,SAACsC,EAAYpC,GACtB,OAAIA,EAAQ+B,EAAQM,SAAWH,EAE3B,kBAAC,EAAD,CAAe5E,IAAG,UAAK2E,GAAL,OAAcjC,GAAd,OAAsBoC,EAAWjF,KACjD,yBAAKiC,UAAU,aACb,kBAAC,EAAD,CAAWqB,SAAU2B,EAAYlC,QAAS,EAAKwB,qBAIhD,aAnCjB,EAAKV,MAAQ,CACXY,YAAY,EACZD,oBAAqB,MAJN,E,sEA6CT,IAAD,EACqClF,KAAKuE,MAAzCY,EADD,EACCA,WAAYD,EADb,EACaA,oBACpB,OACE,kBAAC,IAAD,KACGlF,KAAKqF,qBACN,kBAAC,IAAD,CAAO1C,UAAU,YAAYQ,QAASgC,EAAY/C,MAAO,KAAMyD,OAAQ,KAAMC,cAAc,EAAOC,SAAU/F,KAAKoF,YAE7GD,GACA,kBAAC,EAAD,CAAWnB,SAAUkB,U,GAtDbtB,IAAMC,eAmE1BmB,EAAMX,aAAe,CACnBkB,OAAQ,IAGKP,QC5ETgB,E,iLACM,IACAC,EAAUjG,KAAKmC,MAAf8D,MACR,OACE,kBAAC,IAAD,KAEIA,EAAM5C,KAAI,SAAAxB,GAAI,OACZ,kBAAC,IAAD,CAAKhB,IAAKgB,EAAMiB,GAAI,GAAIG,GAAI,GAAIC,GAAI,EAAGwC,GAAI,GACzC,yBAAK/C,UAAU,aACb,yBAAKA,UAAU,mEACb,yBAAKA,UAAU,mBAAmBC,MAAO,CAAEC,OAAQ,sB,GAVhDe,IAAMC,eAyB3BmC,EAAO3B,aAAe,CACpB4B,MAAO,CAAC,EAAG,EAAG,EAAG,IAGJD,QCuLAE,E,2MA7Mb3B,MAAQ,CACNgB,OAAQ,GACRY,YAAa3G,EAAYY,eACzBkF,QAASjF,EAAWb,EAAYY,eAAeH,aAC/CoC,YAAa,GACb+D,UAAW,EACXC,iBAAiB,EACjBC,SAAS,EACThE,qBAAqB,EACrBC,YAAa3B,EAAwBtB,EAAcC,WAAY,K,EAajEgH,aAAe,WACb,EAAK1B,SAAS,CAAEyB,SAAS,K,EAG3BE,YAAc,WACZ,EAAK3B,SAAS,CAAEyB,SAAS,K,EAG3BG,YAAc,SAACC,EAAMC,IAEnBC,EADgBC,IAAQH,IAChBC,I,EAGVG,cAAgB,WACdC,aAAa,EAAKC,SAClB,EAAKA,QAAUC,YAAW,WACxB,IAAMd,EAAc3G,EAAYY,eAChC,EAAKyE,SAAS,CACZsB,cACAb,QAASjF,EAAW8F,EAAYlG,iBAEjC,M,EAGLiH,kBAAoB,SAAAC,GAAa,IACvBf,EAAc,EAAK7B,MAAnB6B,UACRgB,IAAM,CACJC,OAAQ,MACRnD,IAAI,gFAAD,OAAkF/E,EAAlF,qBAAsGC,EAAtG,iBAA6HgH,EAA7H,iCACHkB,eAAgB,SAAAC,GACd,OAASA,GAAU,KAAOA,EAAS,KAAmB,MAAXA,KAE5CC,MAAK,SAAAC,GAEN,GADIN,GAAUA,IACVM,EAAI1G,KAAK2G,QAAUD,EAAI1G,KAAK2G,OAAOnH,MAAO,CAC5C,IAAMgF,EAAS,EAAKoC,oBAAoBF,EAAI1G,KAAK2G,OAAOnH,OACxD,EAAKsE,UAAS,SAAAN,GACZ,MAAO,CACLgB,OAAO,GAAD,mBAAMhB,EAAMgB,QAAZ,YAAuBA,IAC7Bc,gBAAiBoB,EAAI1G,KAAK2G,OAAOnH,MAAMqF,SAAWxG,EAClDgH,UAAWA,EAAY,UAI5BwB,OAAM,SAAAnD,GACP,EAAKgC,YAAY,QAAS,oD,EAI9BoB,uBAAyB,SAACC,EAAKX,GAAc,IACnCf,EAAc,EAAK7B,MAAnB6B,UACRgB,IAAM,CACJC,OAAQ,MACRnD,IAAI,6EAAD,OAA+E/E,EAA/E,iBAA+F2I,EAA/F,qBAA+G1I,EAA/G,iBAAsIgH,EAAtI,iCACHkB,eAAgB,SAAAC,GACd,OAASA,GAAU,KAAOA,EAAS,KAAmB,MAAXA,KAE5CC,MAAK,SAAAC,GAEN,GADIN,GAAUA,IACVM,EAAI1G,KAAK2G,QAAUD,EAAI1G,KAAK2G,OAAOnH,MAAO,CAC5C,IAAMgF,EAAS,EAAKoC,oBAAoBF,EAAI1G,KAAK2G,OAAOnH,OACxD,EAAKsE,UAAS,SAAAN,GACZ,MAAO,CACLgB,OAAO,GAAD,mBAAMhB,EAAMgB,QAAZ,YAAuBA,IAC7Bc,gBAAiBoB,EAAI1G,KAAK2G,OAAOnH,MAAMqF,SAAWxG,EAClDgH,UAAWA,EAAY,UAI5BwB,OAAM,SAAAnD,GACP,EAAKgC,YAAY,QAAS,oD,EAI9BkB,oBAAsB,SAAAD,GAEpB,IADA,IAAMnC,EAAS,GACNE,EAAI,EAAGA,EAAIiC,EAAO9B,OAAQH,IACjC,GAAIiC,EAAOjC,GAAG/E,GAAI,CAChB,IAAMqH,EAAU,CACdrH,GAAIgH,EAAOjC,GAAG/E,GACdwD,IAAK5D,EAAYoH,EAAOjC,KAE1BF,EAAOyC,KAAKD,GAGhB,OAAOxC,G,EAGT0C,cAAgB,SAAAH,GACd,EAAKjD,SAAS,CACZyB,SAAS,EACTf,OAAQ,GACRa,UAAW,EACXC,iBAAiB,EACjB/D,qBAAqB,IACpB,WACD,GAAIwF,EAAIlC,OAAS,EAAG,CAClB,EAAKiC,uBAAuBC,EAAK,EAAKtB,aACtC,IAAMjE,EAAc3B,EAAwBtB,EAAcC,WAAY,KAEvD,IADDgD,EAAY2F,WAAU,SAAArH,GAAG,OAAIA,IAAQiH,OAEjDvF,EAAYyF,KAAKF,GACjBzG,EAAsB/B,EAAcC,WAAYgD,S,EAMxD4F,mBAAqB,SAAAC,GACnB,IAAM/F,EAAc+F,EAAMC,OAAO1E,MACjC,GAA2B,IAAvBtB,EAAYuD,OACd,EAAKf,SAAS,CACZxC,cACAiE,SAAS,EACTf,OAAQ,GACRa,UAAW,EACXC,iBAAiB,EACjB/D,qBAAqB,IACpB,WACD,EAAK4E,kBAAkB,EAAKV,oBAEzB,CACL,IAAMjE,EAAc3B,EAAwBtB,EAAcC,WAAY,IAChE+I,EAAsB7G,EAAwBY,EAAaE,GACjE,EAAKsC,SAAS,CACZxC,cACAE,YAAa+F,EACbhG,oBAAoD,IAA/BgG,EAAoB1C,W,EAK/ClD,iBAAmB,SAAAY,GACE,IAAfA,GACF,EAAKuB,SAAS,CACZxC,YAAaiB,EACbgD,SAAS,EACTf,OAAQ,GACRa,UAAW,EACXC,iBAAiB,EACjB/D,qBAAqB,IACpB,WACD,EAAKuF,uBAAuBvE,EAAY,EAAKkD,iB,EAKnD+B,gBAAkB,WAAO,IACflG,EAAgB,EAAKkC,MAArBlC,YACmB,IAAvBA,EAAYuD,OACd,EAAKsB,oBAEL,EAAKW,uBAAuBxF,I,mFAjK9B1C,OAAO6I,iBAAiB,SAAUxI,KAAK8G,eACvC9G,KAAKuG,eACLvG,KAAKkH,kBAAkBlH,KAAKwG,e,6CAI5B7G,OAAO8I,oBAAoB,SAAUzI,KAAK8G,iB,+BA+JlC,IAAD,EAC+F9G,KAAKuE,MAAnGe,EADD,EACCA,QAASC,EADV,EACUA,OAAQlD,EADlB,EACkBA,YAAagE,EAD/B,EAC+BA,gBAAiB/D,EADhD,EACgDA,oBAAqBC,EADrE,EACqEA,YAAa+D,EADlF,EACkFA,QACzF,OACE,yBAAK1D,MAAO,CAAE8F,WAAW,GAAD,OAAKrJ,EAAL,QACtB,kBAAC,EAAD,CAAQ+C,MAAM,gBAAgBC,YAAaA,EAAaC,oBAAqBA,EAAqBI,iBAAkB1C,KAAK0C,iBAAkBH,YAAaA,EAAaC,SAAUxC,KAAKiI,cAAexF,SAAUzC,KAAKmI,qBAClN,yBAAKzH,GAAG,iBAAiBiC,UAAU,gCAAgCC,MAAO,CAAEC,OAAO,gBAAD,OAAkBxD,EAAlB,SAE9EiH,EACE,kBAAC,EAAD,CAAQL,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAC3C,kBAAC,IAAD,CACE0C,iBAAiB,iBACjBC,WAAYrD,EAAOK,OACnBiD,QAASxC,EACTyC,OAAQ,kBAAC,EAAD,MACRC,WAAY,yBAAKpG,UAAU,8BAA6B,yDACxDqG,gBAAiB,GACjBC,KAAMjJ,KAAKuI,iBAEX,kBAAC,EAAD,CAAOjD,QAASA,EAASC,OAAQA,W,GArM/B3B,IAAMmB,WCFJmE,QACW,cAA7BvJ,OAAOwJ,SAASC,UAEe,UAA7BzJ,OAAOwJ,SAASC,UAEhBzJ,OAAOwJ,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpC,MAAK,SAAAqC,GACjCA,EAAaC,kB","file":"static/js/main.7bd294fd.chunk.js","sourcesContent":["export const API_KEY = '4adabc18bb64a9030673bce2524d6ed5';\n\nexport const PER_PAGE_COUNT = 10;\n\nexport const APP_LAYOUT = { //in px\n  APP_HEADER_HEIGHT: 100,\n};\n\nexport const LOCAL_STORAGE = {\n  SEARCH_KEY: 'imageSearchKey',\n}\n","import axios from 'axios';\n\nimport { BASE_URL } from './constants';\n\nexport const checkDevice = {\n  screen_data: function () {\n    return (\n      {\n        screen_width: window.innerWidth,\n        screen_height: window.innerHeight,\n        screen_orientation: this.screen_orientation(),\n        screen_type: this.screen_type()\n      }\n    );\n  },\n  screen_orientation: function () {\n    if (window.matchMedia(\"(orientation:landscape)\").matches) {\n      return 'landscape';\n    } else {\n      return 'portrait';\n    }\n  },\n  screen_type: function () {\n    if (window.innerWidth < 576) {\n      return 'xs';\n    } else if (window.innerWidth < 768) {\n      return 'sm';\n    } else if (window.innerWidth < 992) {\n      return 'md';\n    } else if (window.innerWidth < 1200) {\n      return 'lg';\n    } else if (window.innerWidth < 1600) {\n      return 'xl';\n    } else if (window.innerWidth < 2560) {\n      return 'xxl';\n    } else {\n      return 'xxxl';\n    }\n  },\n  deviceStatus: function () {\n    return ({\n      ...this.screen_data()\n    });\n  }\n};\n\nexport const getColumns = screen_type => {\n  switch (screen_type) {\n    case 'xs': return ['c1'];\n    case 'sm': return ['c1', 'c2'];\n    case 'md': return ['c1', 'c2', 'c3'];\n    case 'lg':\n    case 'xl':\n    case 'xxl':\n    case 'xxxl': return ['c1', 'c2', 'c3', 'c4'];\n    default: return ['c1'];\n  }\n}\n\nexport const getImageUrl = photo => {\n  const url = `https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}.jpg`;\n  return url;\n}\n\nexport const getDataFromLocalStorage = (key, undefined_return_value) => {\n  const data = localStorage.getItem(key);\n  return (data && data !== undefined ? JSON.parse(data) : undefined_return_value);\n};\n\nexport const setDataInLocalStorage = (key, data) => {\n  const json_data = JSON.stringify(data);\n  localStorage.setItem(key, json_data);\n};\n\nexport const filterArrayBySearchText = (text, array) => {\n  return array.filter(item => {\n    return (item && item !== undefined && item.toLowerCase().indexOf(text.toLowerCase()) === 0);\n  });\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport Input from 'antd/es/input';\nimport Dropdown from 'antd/es/dropdown';\nimport Menu from 'antd/es/menu';\n\nimport 'antd/es/row/style/css';\nimport 'antd/es/col/style/css';\nimport 'antd/es/input/style/css';\nimport 'antd/es/dropdown/style/css';\nimport 'antd/es/menu/style/css';\n\nimport { APP_LAYOUT } from '../../data/config/constants';\n\nconst { Search } = Input;\n\nclass Header extends React.PureComponent {\n  render() {\n    const { title, search_text, show_search_overlay, search_keys, onSearch, onChange, onClickSearchKey } = this.props;\n    return (\n      <div className='sai-fixed sai-t-0 sai-l-0 sai-r-0 sai-bg-header sai-box-shadow sai-overflow-y-hidden' style={{ height: `${APP_LAYOUT.APP_HEADER_HEIGHT}px` }}>\n        <Row>\n          <Col xs={{ span: 20, offset: 2 }} sm={{ span: 12, offset: 6 }} md={{ span: 8, offset: 8 }} className='sai-t-pad-10'>\n            <h2 className='sai-font-bold sai-text-center sai-font-white sai-b-mrgn-10'>{title}</h2>\n            <Dropdown\n              visible={show_search_overlay}\n              overlay={\n                <Menu >\n                  {\n                    search_keys.map((search_key, index) => (\n                      <Menu.Item key={index} onClick={() => onClickSearchKey(search_key)}>{search_key}</Menu.Item>\n                    ))\n                  }\n                </Menu>\n              }>\n              <Search placeholder='Type to search photos' value={search_text} onSearch={onSearch} onChange={onChange} />\n            </Dropdown>\n          </Col>\n        </Row>\n      </div>\n\n    );\n  }\n}\n\nHeader.propTypes = {\n  search_text: PropTypes.string,\n  title: PropTypes.string,\n  onSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onClickSearchKey: PropTypes.func,\n  show_search_overlay: PropTypes.bool,\n  search_keys: PropTypes.array,\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ImageCard extends React.PureComponent {\n  onClickCard = () => {\n    const { img_data, onClick } = this.props;\n    onClick(img_data);\n  }\n\n  render() {\n    const { img_data } = this.props;\n    return (\n      <div className=\"sai-pad-5 sai-bg-white sai-box-shadow-light sai-border-radius-3\" onClick={this.onClickCard}>\n        <div className=\"sai-card-loading\">\n          <img className=\"sai-full-width\" src={img_data.url} alt=\"\" style={{minHeight:'150px'}} />\n        </div>\n      </div>\n    );\n  }\n}\n\nImageCard.propTypes = {\n  img_data: PropTypes.object.isRequired,\n  onClick: PropTypes.func,\n}\n\nImageCard.defaultProps = {\n  img_data: {}\n}\n\nexport default ImageCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log('error', error);\n    console.log('errorInfo', errorInfo);\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    const { children } = this.props;\n    const { hasError } = this.state;\n    if (hasError)\n      return null;\n    return children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default ErrorBoundary;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\nimport Modal from 'antd/es/modal';\n\nimport 'antd/es/row/style/css';\nimport 'antd/es/col/style/css';\nimport 'antd/es/modal/style/css';\n\nimport ImageCard from '../imagecard';\nimport ErrorBoundary from '../errorboundary';\n\nclass Album extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      show_modal: false,\n      selected_image_data: null,\n    }\n  }\n\n  showImageInModal = selected_image_data => {\n    this.setState({\n      show_modal: true,\n      selected_image_data\n    })\n  }\n\n  closeModal = () => {\n    this.setState({\n      show_modal: false,\n      selected_image_data: null\n    })\n  }\n\n  renderAlbumColumns = () => {\n    const { columns, images } = this.props;\n    return columns.map((column, i) => {\n      return (\n        <Col key={column} xs={24} sm={12} md={8} lg={6}>\n          {\n            images.map((image_data, index) => {\n              if (index % columns.length === i)\n                return (\n                  <ErrorBoundary key={`${column}${index}${image_data.id}`}>\n                    <div className=\"sai-pad-5\">\n                      <ImageCard img_data={image_data} onClick={this.showImageInModal} />\n                    </div>\n                  </ErrorBoundary>\n                );\n              return null\n            })\n          }\n        </Col>\n      );\n    })\n  }\n\n  render() {\n    const { show_modal, selected_image_data } = this.state;\n    return (\n      <Row>\n        {this.renderAlbumColumns()}\n        <Modal className=\"sai-modal\" visible={show_modal} title={null} footer={null} maskClosable={false} onCancel={this.closeModal}>\n          {\n            show_modal &&\n            <ImageCard img_data={selected_image_data} />\n          }\n        </Modal>\n      </Row>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  columns: PropTypes.array.isRequired,\n  images: PropTypes.array,\n}\n\nAlbum.defaultProps = {\n  images: []\n}\n\nexport default Album;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'antd/es/row';\nimport Col from 'antd/es/col';\n\nimport 'antd/es/row/style/css';\nimport 'antd/es/col/style/css';\n\nclass Loader extends React.PureComponent {\n  render() {\n    const { count } = this.props;\n    return (\n      <Row>\n        {\n          count.map(item => (\n            <Col key={item} xs={24} sm={12} md={8} lg={6}>\n              <div className=\"sai-pad-5\">\n                <div className=\"sai-bg-white sai-pad-5 sai-box-shadow-light sai-border-radius-3\">\n                  <div className=\"sai-card-loading\" style={{ height: '150px' }} />\n                </div>\n              </div>\n            </Col>\n          ))\n        }\n      </Row>\n    );\n  }\n}\n\nLoader.propTypes = {\n  count: PropTypes.array.isRequired,\n}\n\nLoader.defaultProps = {\n  count: [1, 2, 3, 4]\n}\n\nexport default Loader;\n","import React from 'react';\nimport axios from 'axios';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport message from 'antd/es/message'\n\nimport { APP_LAYOUT, API_KEY, LOCAL_STORAGE, PER_PAGE_COUNT } from '../data/config/constants';\nimport { checkDevice, getColumns, getImageUrl, getDataFromLocalStorage, setDataInLocalStorage, filterArrayBySearchText } from '../data/config/utils';\n\nimport 'antd/es/message/style/css';\n\nimport Header from '../components/header';\nimport Album from '../components/album';\nimport Loader from '../components/loader';\n\nclass App extends React.Component {\n  state = {\n    images: [],\n    device_data: checkDevice.deviceStatus(),\n    columns: getColumns(checkDevice.deviceStatus().screen_type),\n    search_text: '',\n    next_page: 1,\n    has_more_images: true,\n    loading: false,\n    show_search_overlay: false,\n    search_keys: getDataFromLocalStorage(LOCAL_STORAGE.SEARCH_KEY, [])\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.setDeviceData);\n    this.startLoading();\n    this.fetchRecentImages(this.stopLoading);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.setDeviceData);\n  }\n\n  startLoading = () => {\n    this.setState({ loading: true });\n  }\n\n  stopLoading = () => {\n    this.setState({ loading: false });\n  }\n\n  showMessage = (type, msg) => {\n    const Message = message[type];\n    Message(msg);\n  };\n\n  setDeviceData = () => {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      const device_data = checkDevice.deviceStatus();\n      this.setState({\n        device_data,\n        columns: getColumns(device_data.screen_type)\n      });\n    }, 300);\n  }\n\n  fetchRecentImages = callback => {\n    const { next_page } = this.state;\n    axios({\n      method: 'GET',\n      url: `https://www.flickr.com/services/rest/?method=flickr.photos.getRecent&api_key=${API_KEY}&per_page=${PER_PAGE_COUNT}&page=${next_page}&format=json&nojsoncallback=1`,\n      validateStatus: status => {\n        return ((status >= 200 && status < 300) || status === 412);\n      },\n    }).then(res => {\n      if (callback) callback();\n      if (res.data.photos && res.data.photos.photo) {\n        const images = this.convertInImagesList(res.data.photos.photo);\n        this.setState(state => {\n          return {\n            images: [...state.images, ...images],\n            has_more_images: res.data.photos.photo.length === PER_PAGE_COUNT,\n            next_page: next_page + 1,\n          }\n        })\n      }\n    }).catch(error => {\n      this.showMessage('error', 'unable to fetch images, something went wrong');\n    });\n  }\n\n  fetchImagesBySearchTag = (tag, callback) => {\n    const { next_page } = this.state;\n    axios({\n      method: 'GET',\n      url: `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${API_KEY}&tags=${tag}&per_page=${PER_PAGE_COUNT}&page=${next_page}&format=json&nojsoncallback=1`,\n      validateStatus: status => {\n        return ((status >= 200 && status < 300) || status === 412);\n      },\n    }).then(res => {\n      if (callback) callback();\n      if (res.data.photos && res.data.photos.photo) {\n        const images = this.convertInImagesList(res.data.photos.photo);\n        this.setState(state => {\n          return {\n            images: [...state.images, ...images],\n            has_more_images: res.data.photos.photo.length === PER_PAGE_COUNT,\n            next_page: next_page + 1,\n          }\n        })\n      }\n    }).catch(error => {\n      this.showMessage('error', 'unable to fetch images, something went wrong');\n    });\n  }\n\n  convertInImagesList = photos => {\n    const images = [];\n    for (let i = 0; i < photos.length; i++) {\n      if (photos[i].id) {\n        const img_obj = {\n          id: photos[i].id,\n          url: getImageUrl(photos[i]),\n        };\n        images.push(img_obj);\n      }\n    }\n    return images;\n  }\n\n  onImageSearch = tag => {\n    this.setState({\n      loading: true,\n      images: [],\n      next_page: 1,\n      has_more_images: true,\n      show_search_overlay: false\n    }, () => {\n      if (tag.length > 0) {\n        this.fetchImagesBySearchTag(tag, this.stopLoading);\n        const search_keys = getDataFromLocalStorage(LOCAL_STORAGE.SEARCH_KEY, []);\n        const index = search_keys.findIndex(key => key === tag);\n        if (index === -1) {\n          search_keys.push(tag);\n          setDataInLocalStorage(LOCAL_STORAGE.SEARCH_KEY, search_keys);\n        }\n      }\n    })\n  }\n\n  onChangeSearchText = event => {\n    const search_text = event.target.value;\n    if (search_text.length === 0) {\n      this.setState({\n        search_text,\n        loading: true,\n        images: [],\n        next_page: 1,\n        has_more_images: true,\n        show_search_overlay: false,\n      }, () => {\n        this.fetchRecentImages(this.stopLoading)\n      })\n    } else {\n      const search_keys = getDataFromLocalStorage(LOCAL_STORAGE.SEARCH_KEY, []);\n      const filterd_search_keys = filterArrayBySearchText(search_text, search_keys);\n      this.setState({\n        search_text,\n        search_keys: filterd_search_keys,\n        show_search_overlay: filterd_search_keys.length !== 0\n      })\n    }\n  }\n\n  onClickSearchKey = search_key => {\n    if (search_key !== 0) {\n      this.setState({\n        search_text: search_key,\n        loading: true,\n        images: [],\n        next_page: 1,\n        has_more_images: true,\n        show_search_overlay: false,\n      }, () => {\n        this.fetchImagesBySearchTag(search_key, this.stopLoading);\n      })\n    }\n  }\n\n  fetchMoreImages = () => {\n    const { search_text } = this.state;\n    if (search_text.length === 0) {\n      this.fetchRecentImages()\n    } else {\n      this.fetchImagesBySearchTag(search_text)\n    }\n  }\n\n  render() {\n    const { columns, images, search_text, has_more_images, show_search_overlay, search_keys, loading, } = this.state;\n    return (\n      <div style={{ paddingTop: `${APP_LAYOUT.APP_HEADER_HEIGHT}px` }}>\n        <Header title='Search Photos' search_text={search_text} show_search_overlay={show_search_overlay} onClickSearchKey={this.onClickSearchKey} search_keys={search_keys} onSearch={this.onImageSearch} onChange={this.onChangeSearchText} />\n        <div id='albumContainer' className=\"sai-overflow-y-auto sai-pad-5\" style={{ height: `calc(100vh - ${APP_LAYOUT.APP_HEADER_HEIGHT}px)` }}>\n          {\n            loading ?\n              <Loader count={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]} /> :\n              <InfiniteScroll\n                scrollableTarget=\"albumContainer\"\n                dataLength={images.length} //This is important field to render the next data\n                hasMore={has_more_images}\n                loader={<Loader />}\n                endMessage={<div className='sai-text-center sai-pad-10'><b>Yay! You have seen it all</b></div>}\n                scrollThreshold={0.9}\n                next={this.fetchMoreImages}\n              >\n                <Album columns={columns} images={images} />\n              </InfiniteScroll>\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './data/styles/index.scss';\n\nimport App from './app';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}